								런칭 비공개 테스트 준비법

키스토어 등록(설정한 패스워드 기억 혹은 메모장에 작성 필수) - edit의 project settings에서 안드로이드의 publishing settings으로 이동

keystore Manger 클릭 후 설정 - 해당 내용을 테스트 도중 까먹는다면 앱 무결성 부분이 달라져 다시 테스트 등록 과정을 거쳐야 하기 때문에 기억 혹은 메모 필수

비공개 테스트 등록법 및 플레이 서비스 단계

비공개테스트시 - 가장 큰 문제는 개인정보 처리 방침 - 개인정보 처리 방침은 전용 사이트가 존재함(자동 생성 가능) 추후 개인정보 포털의 개인

정보보호도우미가 활성화된다면 해당 사이트에서 가능

그 이외에는 큰 문제가 없다.

play 게임즈 서비스 설정

구글 클라우드 플랫폼 OAuth 동의 화면 만들기 앱이름 작성 및 등록에 필요한 정보들 등록(이후 테스터에 이메일 등록 부분이 존재)

사용자 인증정보 추가 : 플레이 게임즈 서비스 - 설정에서 사용자 인증정보 추가 버튼을 누른 후 설정 Oauth 클라이언트를 생성 후 클라이언트 설정

								생성 법

1. 앱 이름을 이름에 넣는다 단순 클라이언트 식별용이기에 크게 상관없지만 구분을 위해 앱이름을 넣는걸 추천한다.
2. 패키지 이름은 com.~.~이다. 플레이 콘솔에서 대시보드를 가면 앱 이름 아래에 작은 글씨로 나와있다. 해당 부분을 넣어준다. 
3. sha-1인증서 디지털 지문은 플레이 콘솔에서 테스트 및 출시 - 설정 - 앱 서명에 나와있다.
프로젝트 게시

플레이 게임즈 서비스 sdk apk 추가하여 api 사용  - 깃(2.0.0기준 주소:https://github.com/playgameservices/play-games-plugin-for-unity)

에서 다운로드 및 압축 해제 후 원하는 프로젝트에 current build 문서에 있는 패키지 파일 임포트

						이후는 유니티 프로젝트 내부에서 해야할 일

플레이 게임 서비스 부분에서 사용자 인증 정보 텍스트 왼쪽에 리소스 가져오기 기능존재 해당 리소스 필요하니 내용 복사

window - google play games - setup - android setup 부분에서 가져온 리소스를 복붙

여기서 첫 입력칸은 단순히 어느 위치에 파일 생성할것이냐에 대한것, 두 번째는 파일 이름(기본으로 첫 번째는assets,두 번째 GPGSids로 되어있음)

굳이 수정하지 않아도 됨 필요하다면 수정

가장 넓은 칸에 긁어온 리소스를 넣는다.

Client id는 OAuth를 생성 후 인증 정보에 프로젝트 부분을 들어가면 클라이언트 id가 보인다 해당 부분을 긁어오면 된다. 

설정한 OAuth 클라이언트의 id를 가져오는것이다. 완료 후 setup 버튼을 누른다.

nearby connetion setup은 사용자 인증 정보 추가에서 본 패키지 이름을 넣는 것이다. 설정 후 setup 클릭

						마지막과정으로 두가지 방법

첫 번째 assets에서 external Dependency Manager - Android Resolver - Forece Resolve 클릭 만약 안된다면

edit - project Settings의 publishing settings에서 custom Main Gradle Template 활성화, Custom Gradle Properties Template 활성화

coustom Gradle Setings Template 활성화 이 방식으로 시도

이후 빌드를 하고 빠르게 확인을 위한 내부 테스트의 버전을 업데이트하고 직접 시도해본 후 로그인이 되는걸 확인

★만약 빌드가 안된다면 새 프로젝트에서 패키지매니저 임포트 과정과 마지막 과정을 각각 시도해본 후 오류가 나지 않는 방법으로 시도 및 키스토어 확인 패스워드가 다르다면 빌드가 안된다. 또한 디버그용 빌드인지도 확인 필요 테스트 등록용은 디버그용이아닌 등록한 키스토어로 빌드해야한다.
★로그인은 오브젝트를 만들고 로그인 스크립트를 넣어야한다.







